{"version":3,"sources":["App.js","index.js"],"names":["classes","table","border","th","td","App","count","setCount","useState","para","setPara","words","str_para","replace","toLowerCase","split","wordCount","i","length","undefined","keyValueArray","key","Object","hasOwnProperty","call","push","value","multipleArrays","slice","useEffect","_jsxs","_Fragment","children","_jsx","name","rows","cols","onChange","e","target","style","display","flexDirection","justifyContent","height","onClick","IoMdRefresh","size","margin","map","val","className","word","textAlign","rootElement","document","getElementById","createRoot","render","StrictMode"],"mappings":"sIAIA,MAAMA,EAAU,CACdC,MAAO,CACLC,OAAQ,mBAEVC,GAAI,CACFD,OAAQ,mBAEVE,GAAI,CACFF,OAAQ,oBAIG,SAASG,IACtB,MAAOC,EAAOC,GAAYC,mBAAS,IAGnC,MAAOC,EAAMC,GAAWF,mBADtB,4WAGF,SAASG,IACP,IAAIC,EAAWH,EAEfG,EAAWA,EAASC,QAAQ,KAAM,IAClCD,EAAWA,EAASC,QAAQ,MAAO,IACnCD,EAAWA,EAASE,YAAYF,GAChCA,EAAWA,EAASG,MAAM,KAE1B,MAAMC,EAAY,CAAC,EACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAASM,OAAQD,SACJE,IAA3BH,EAAUJ,EAASK,IACrBD,EAAUJ,EAASK,IAAM,EAEzBD,EAAUJ,EAASK,MAIvB,MAAMG,EAAgB,GAEtB,IAAK,MAAMC,KAAOL,EACZM,OAAOC,eAAeC,KAAKR,EAAWK,IACxCD,EAAcK,KAAK,CAAEJ,IAAKA,EAAKK,MAAOV,EAAUK,KAMpD,MACMM,EAAiB,GAEvB,IAAK,IAAIV,EAAI,EAAGA,EAAIG,EAAcF,OAAQD,GAHxB,GAIhBU,EAAeF,KAAKL,EAAcQ,MAAMX,EAAGA,EAJ3B,KAOlBV,EAASoB,EACX,CAOA,OANAE,qBAAU,KACK,KAATpB,GACFE,GACF,GACC,IAGDmB,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAAA,UAAAE,SAAA,CACEC,cAAA,MAAAD,SAAI,oBACJC,cAAA,KAAAD,SAAG,6BACHC,cAAA,OAAAD,SACEC,cAAA,YACEC,KAAK,GACLC,KAAK,KACLC,KAAK,MACLV,MAAOjB,EACP4B,SAAWC,IACT5B,EAAQ4B,EAAEC,OAAOb,MAAM,MAI7BI,eAAA,OACEU,MAAO,CACLC,QAAS,OACTC,cAAe,MACfC,eAAgB,UAChBX,SAAA,CAEFC,cAAA,UACEO,MAAO,CACLI,OAAQ,QAEVC,QAASlC,EAAMqB,SAChB,WAGDC,cAACa,IAAW,CACVD,QAASA,KACPnC,EAAQ,IACRH,EAAS,GAAG,EAEdwC,KAAM,WAKZd,cAAA,OACEO,MAAO,CACLC,QAAS,OACTE,eAAgB,eAChBK,OAAQ,IACRhB,SAED1B,EAAMY,OAAS,GACdZ,EAAM2C,KAAKC,GAEPpB,eAAA,SAAOqB,UAAU,QAAQX,MAAOxC,EAAQC,MAAM+B,SAAA,CAC5CC,cAAA,SAAAD,SACEF,eAAA,MAAAE,SAAA,CACEC,cAAA,MAAIO,MAAOxC,EAAQI,GAAG4B,SAAC,SACvBC,cAAA,MAAIO,MAAOxC,EAAQI,GAAG4B,SAAC,eAG3BC,cAAA,SAAAD,UACM,OAAHkB,QAAG,IAAHA,OAAG,EAAHA,EAAKhC,QAAS,GACbgC,EAAID,KAAI,CAACG,EAAMnC,IAEXgB,cAAAF,WAAA,CAAAC,SACEF,eAAA,MACEU,MAAO,CACLa,UAAW,UACXrB,SAAA,CAEFC,cAAA,MAAIO,MAAO,CAAC,EAAER,SAAEoB,EAAK/B,MACrBY,cAAA,MAAAD,SAAKoB,EAAK1B,0BAYtC,CC5IA,MAAM4B,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACHzB,cAAC0B,aAAU,CAAA3B,SACTC,cAAC5B,EAAG,M","file":"static/js/main.adf593a2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { IoMdRefresh } from \"react-icons/io\";\r\n\r\nconst classes = {\r\n  table: {\r\n    border: \"1px solid black\",\r\n  },\r\n  th: {\r\n    border: \"1px solid black\",\r\n  },\r\n  td: {\r\n    border: \"1px solid black\",\r\n  },\r\n};\r\n\r\nexport default function App() {\r\n  const [count, setCount] = useState([]);\r\n  let text =\r\n    \"Google is the most popular company founded by Larry Page and Sergey Brin in Ninteen Nighty Eight. The term Google comes from a mathematical word googol, which means one with a hundred zeros.Google is an internet savvy market that has created a global impact .Google has overturned the lives of people with its system of world information accessible and useful.\";\r\n  const [para, setPara] = useState(text);\r\n\r\n  function words() {\r\n    let str_para = para;\r\n\r\n    str_para = str_para.replace(/,/g, \"\");\r\n    str_para = str_para.replace(/\\./g, \"\");\r\n    str_para = str_para.toLowerCase(str_para);\r\n    str_para = str_para.split(\" \");\r\n\r\n    const wordCount = {};\r\n    for (let i = 0; i < str_para.length; i++) {\r\n      if (wordCount[str_para[i]] === undefined) {\r\n        wordCount[str_para[i]] = 1;\r\n      } else {\r\n        wordCount[str_para[i]]++;\r\n      }\r\n    }\r\n\r\n    const keyValueArray = [];\r\n\r\n    for (const key in wordCount) {\r\n      if (Object.hasOwnProperty.call(wordCount, key)) {\r\n        keyValueArray.push({ key: key, value: wordCount[key] });\r\n      }\r\n    }\r\n    // console.log(wordCount);\r\n    // setCount(JSON.stringify(wordCount, null, 8));\r\n\r\n    const chunkSize = 10;\r\n    const multipleArrays = [];\r\n\r\n    for (let i = 0; i < keyValueArray.length; i += chunkSize) {\r\n      multipleArrays.push(keyValueArray.slice(i, i + chunkSize));\r\n    }\r\n\r\n    setCount(multipleArrays);\r\n  }\r\n  useEffect(() => {\r\n    if (para !== \"\") {\r\n      words();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <center>\r\n        <h3>Enter Text Here</h3>\r\n        <p>Let's start words count </p>\r\n        <div>\r\n          <textarea\r\n            name=\"\"\r\n            rows=\"20\"\r\n            cols=\"100\"\r\n            value={para}\r\n            onChange={(e) => {\r\n              setPara(e.target.value);\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <button\r\n            style={{\r\n              height: \"35px\",\r\n            }}\r\n            onClick={words}\r\n          >\r\n            Submit\r\n          </button>\r\n          <IoMdRefresh\r\n            onClick={() => {\r\n              setPara(\"\");\r\n              setCount(\"\");\r\n            }}\r\n            size={30}\r\n          />\r\n        </div>\r\n      </center>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-around\",\r\n          margin: 10,\r\n        }}\r\n      >\r\n        {count.length > 0 &&\r\n          count.map((val) => {\r\n            return (\r\n              <table className=\"table\" style={classes.table}>\r\n                <thead>\r\n                  <tr>\r\n                    <th style={classes.td}>WORD</th>\r\n                    <th style={classes.td}>COUNT</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {val?.length > 0 &&\r\n                    val.map((word, i) => {\r\n                      return (\r\n                        <>\r\n                          <tr\r\n                            style={{\r\n                              textAlign: \"center\",\r\n                            }}\r\n                          >\r\n                            <td style={{}}>{word.key}</td>\r\n                            <td>{word.value}</td>\r\n                          </tr>\r\n                        </>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n            );\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}